#!/usr/bin/env node
var pyjs = require('./pythonjs.js')
console.log(ord)
console.log(RuntimeError)
console.log(__NULL_OBJECT__)

var empythoned = require('./empythoned.js');
var Python = empythoned.Python;
var buffer = [];
var _on_stderr = function(chr) {
	if (chr == null || chr == 0 || chr == 10) {
		console.log( buffer.join('') );
		buffer.length = 0;
	} else {
		buffer.push( String.fromCharCode(chr) );
	}
}



// https://github.com/kripken/emscripten/wiki/Filesystem-API
empythoned.FS.createLazyFile(".", "python_to_pythonjs.py", "./python_to_pythonjs.py",
	true,false
);
empythoned.FS.createLazyFile(".", "pythonjs.py", "./pythonjs.py",
	true,false
);
empythoned.FS.createLazyFile(".", "ministdlib.py", "./ministdlib.py",
	true,false
);

Python.initialize(
	null,         // stdin
	null,         // stdout
	_on_stderr     // stderr
);


Python.eval('from python_to_pythonjs import main as to_pythonjs');
Python.eval('from pythonjs import main as to_javascript');
Python.eval('def translate_to_javascript(src): return to_javascript(to_pythonjs(src))');


function translate(data) {
	// data is written to a file to avoid any problems with escaping string quotes
	// note: emscripten 1.0 api
	empythoned.FS.createDataFile( "/sandbox", "temp", data, true, true );
	var code = Python.eval('translate_to_javascript(open("/sandbox/temp","r").read())');
	if (code !== null && code !== undefined) {
		code = code.substring(1, code.length-1);  // strip quotes
		code = code.split('\\n').join('\n');
		code = code.split("\\'").join("\'");
		code = code.split('\\"').join('\"');
		var lines = code.split('\n');
		for (var i=0; i<lines.length; i++) console.log( (i+1) +'.' + lines[i] );
		return code;
	}
}

var test = translate( 'print "hi"; a = chr(100); print a')
console.log(test)
eval( test )
console.log('XXX'+a)
